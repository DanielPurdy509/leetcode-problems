// You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, 
// representing the number of elements in nums1 and nums2 respectively.

// Merge nums1 and nums2 into a single array sorted in non-decreasing order.

// The final sorted array should not be returned by the function, but instead be stored inside the array nums1. 
// To accommodate this, nums1 has a length of m + n, where the first m elements denote 
// the elements that should be merged, and the last n elements are set to 0 and should be ignored. 
// nums2 has a length of n.

const nums1 = [1,2,3,0,0,0];        //Array 1
const m = 3;                        //Amount of elements in Array1
const nums2 = [2,5,6];              //Array 2
const n = 3;                        //Amount of elements in Array2

function mergeSortedArray (nums1,nums2,m,n) {

    let firstPointer = m-1;
    let secondPointer = n-1;
    let index = m + n - 1;

    while(secondPointer >= 0) {
        let fval = nums1[firstPointer];
        let sval = nums2[secondPointer];

        if(sval >= fval){
            nums1[index] = sval;
            secondPointer --;
            index --;
        }
        else{
            nums1[index] = fval;
            firstPointer --;
            index --;
        }
    }
}

mergeSortedArray(nums1,nums2,n,m);

console.log(nums1);